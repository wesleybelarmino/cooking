// Mocks generated by Mockito 5.0.9 from annotations
// in cooking/test/features/recipe/data/repositories/recipe_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:cooking/core/platform/network_info.dart' as _i5;
import 'package:cooking/features/recipe/data/datasources/recipe_remote_data_source.dart'
    as _i3;
import 'package:cooking/features/recipe/data/models/recipe_list_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeRecipeListModel extends _i1.Fake implements _i2.RecipeListModel {}

/// A class which mocks [RecipeRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecipeRemoteDataSource extends _i1.Mock
    implements _i3.RecipeRemoteDataSource {
  MockRecipeRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.RecipeListModel> getRecipes() =>
      (super.noSuchMethod(Invocation.method(#getRecipes, []),
              returnValue:
                  Future<_i2.RecipeListModel>.value(_FakeRecipeListModel()))
          as _i4.Future<_i2.RecipeListModel>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
